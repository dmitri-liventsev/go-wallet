// Code generated by goa v3.17.2, DO NOT EDIT.
//
// transaction endpoints
//
// Command:
// $ goa gen wallet/design

package transaction

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "transaction" service endpoints.
type Endpoints struct {
	Create goa.Endpoint
}

// NewEndpoints wraps the methods of the "transaction" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Create: NewCreateEndpoint(s),
	}
}

// Use applies the given middleware to all the "transaction" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Create = m(e.Create)
}

// NewCreateEndpoint returns an endpoint function that calls the method
// "create" of service "transaction".
func NewCreateEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreatePayload)
		return nil, s.Create(ctx, p)
	}
}

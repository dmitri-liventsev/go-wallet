// Code generated by MockGen. DO NOT EDIT.
// Source: C:\workspace\go\wallet\transaction\workers\correction.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCorrectionInitializer is a mock of CorrectionInitializer interface.
type MockCorrectionInitializer struct {
	ctrl     *gomock.Controller
	recorder *MockCorrectionInitializerMockRecorder
}

// MockCorrectionInitializerMockRecorder is the mock recorder for MockCorrectionInitializer.
type MockCorrectionInitializerMockRecorder struct {
	mock *MockCorrectionInitializer
}

// NewMockCorrectionInitializer creates a new mock instance.
func NewMockCorrectionInitializer(ctrl *gomock.Controller) *MockCorrectionInitializer {
	mock := &MockCorrectionInitializer{ctrl: ctrl}
	mock.recorder = &MockCorrectionInitializerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCorrectionInitializer) EXPECT() *MockCorrectionInitializerMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockCorrectionInitializer) Execute() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute")
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockCorrectionInitializerMockRecorder) Execute() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockCorrectionInitializer)(nil).Execute))
}

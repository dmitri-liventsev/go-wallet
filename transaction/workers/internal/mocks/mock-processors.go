// Code generated by MockGen. DO NOT EDIT.
// Source: C:\workspace\go\wallet\transaction\workers\balance.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	entities "wallet/transaction/internal/domain/entities"

	gomock "github.com/golang/mock/gomock"
)

// MockCorrectionProcessor is a mock of CorrectionProcessor interface.
type MockCorrectionProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockCorrectionProcessorMockRecorder
}

// MockCorrectionProcessorMockRecorder is the mock recorder for MockCorrectionProcessor.
type MockCorrectionProcessorMockRecorder struct {
	mock *MockCorrectionProcessor
}

// NewMockCorrectionProcessor creates a new mock instance.
func NewMockCorrectionProcessor(ctrl *gomock.Controller) *MockCorrectionProcessor {
	mock := &MockCorrectionProcessor{ctrl: ctrl}
	mock.recorder = &MockCorrectionProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCorrectionProcessor) EXPECT() *MockCorrectionProcessorMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockCorrectionProcessor) Execute(correction *entities.Correction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", correction)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockCorrectionProcessorMockRecorder) Execute(correction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockCorrectionProcessor)(nil).Execute), correction)
}

// MockTransactionProcessor is a mock of TransactionProcessor interface.
type MockTransactionProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionProcessorMockRecorder
}

// MockTransactionProcessorMockRecorder is the mock recorder for MockTransactionProcessor.
type MockTransactionProcessorMockRecorder struct {
	mock *MockTransactionProcessor
}

// NewMockTransactionProcessor creates a new mock instance.
func NewMockTransactionProcessor(ctrl *gomock.Controller) *MockTransactionProcessor {
	mock := &MockTransactionProcessor{ctrl: ctrl}
	mock.recorder = &MockTransactionProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionProcessor) EXPECT() *MockTransactionProcessorMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockTransactionProcessor) Execute(transaction *entities.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", transaction)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockTransactionProcessorMockRecorder) Execute(transaction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockTransactionProcessor)(nil).Execute), transaction)
}

// MockCorrectionProvider is a mock of CorrectionProvider interface.
type MockCorrectionProvider struct {
	ctrl     *gomock.Controller
	recorder *MockCorrectionProviderMockRecorder
}

// MockCorrectionProviderMockRecorder is the mock recorder for MockCorrectionProvider.
type MockCorrectionProviderMockRecorder struct {
	mock *MockCorrectionProvider
}

// NewMockCorrectionProvider creates a new mock instance.
func NewMockCorrectionProvider(ctrl *gomock.Controller) *MockCorrectionProvider {
	mock := &MockCorrectionProvider{ctrl: ctrl}
	mock.recorder = &MockCorrectionProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCorrectionProvider) EXPECT() *MockCorrectionProviderMockRecorder {
	return m.recorder
}

// GetActualCorrection mocks base method.
func (m *MockCorrectionProvider) GetActualCorrection() (*entities.Correction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetActualCorrection")
	ret0, _ := ret[0].(*entities.Correction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetActualCorrection indicates an expected call of GetActualCorrection.
func (mr *MockCorrectionProviderMockRecorder) GetActualCorrection() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetActualCorrection", reflect.TypeOf((*MockCorrectionProvider)(nil).GetActualCorrection))
}

// GetNewestCorrection mocks base method.
func (m *MockCorrectionProvider) GetNewestCorrection() (*entities.Correction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNewestCorrection")
	ret0, _ := ret[0].(*entities.Correction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNewestCorrection indicates an expected call of GetNewestCorrection.
func (mr *MockCorrectionProviderMockRecorder) GetNewestCorrection() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNewestCorrection", reflect.TypeOf((*MockCorrectionProvider)(nil).GetNewestCorrection))
}

// MockTransactionProvider is a mock of TransactionProvider interface.
type MockTransactionProvider struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionProviderMockRecorder
}

// MockTransactionProviderMockRecorder is the mock recorder for MockTransactionProvider.
type MockTransactionProviderMockRecorder struct {
	mock *MockTransactionProvider
}

// NewMockTransactionProvider creates a new mock instance.
func NewMockTransactionProvider(ctrl *gomock.Controller) *MockTransactionProvider {
	mock := &MockTransactionProvider{ctrl: ctrl}
	mock.recorder = &MockTransactionProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionProvider) EXPECT() *MockTransactionProviderMockRecorder {
	return m.recorder
}

// GetNextTransaction mocks base method.
func (m *MockTransactionProvider) GetNextTransaction() (*entities.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNextTransaction")
	ret0, _ := ret[0].(*entities.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNextTransaction indicates an expected call of GetNextTransaction.
func (mr *MockTransactionProviderMockRecorder) GetNextTransaction() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNextTransaction", reflect.TypeOf((*MockTransactionProvider)(nil).GetNextTransaction))
}
